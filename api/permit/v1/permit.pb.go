// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: api/permit/v1/permit.proto

package permitv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Permit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HolderName    string                 `protobuf:"bytes,2,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permit) Reset() {
	*x = Permit{}
	mi := &file_api_permit_v1_permit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permit) ProtoMessage() {}

func (x *Permit) ProtoReflect() protoreflect.Message {
	mi := &file_api_permit_v1_permit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permit.ProtoReflect.Descriptor instead.
func (*Permit) Descriptor() ([]byte, []int) {
	return file_api_permit_v1_permit_proto_rawDescGZIP(), []int{0}
}

func (x *Permit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Permit) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

func (x *Permit) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Permit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetPermitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermitRequest) Reset() {
	*x = GetPermitRequest{}
	mi := &file_api_permit_v1_permit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermitRequest) ProtoMessage() {}

func (x *GetPermitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permit_v1_permit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermitRequest.ProtoReflect.Descriptor instead.
func (*GetPermitRequest) Descriptor() ([]byte, []int) {
	return file_api_permit_v1_permit_proto_rawDescGZIP(), []int{1}
}

func (x *GetPermitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPermitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permit        *Permit                `protobuf:"bytes,1,opt,name=permit,proto3" json:"permit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermitResponse) Reset() {
	*x = GetPermitResponse{}
	mi := &file_api_permit_v1_permit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermitResponse) ProtoMessage() {}

func (x *GetPermitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_permit_v1_permit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermitResponse.ProtoReflect.Descriptor instead.
func (*GetPermitResponse) Descriptor() ([]byte, []int) {
	return file_api_permit_v1_permit_proto_rawDescGZIP(), []int{2}
}

func (x *GetPermitResponse) GetPermit() *Permit {
	if x != nil {
		return x.Permit
	}
	return nil
}

type IssuePermitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HolderName    string                 `protobuf:"bytes,1,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
	Category      string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuePermitRequest) Reset() {
	*x = IssuePermitRequest{}
	mi := &file_api_permit_v1_permit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuePermitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuePermitRequest) ProtoMessage() {}

func (x *IssuePermitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permit_v1_permit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuePermitRequest.ProtoReflect.Descriptor instead.
func (*IssuePermitRequest) Descriptor() ([]byte, []int) {
	return file_api_permit_v1_permit_proto_rawDescGZIP(), []int{3}
}

func (x *IssuePermitRequest) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

func (x *IssuePermitRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type IssuePermitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permit        *Permit                `protobuf:"bytes,1,opt,name=permit,proto3" json:"permit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuePermitResponse) Reset() {
	*x = IssuePermitResponse{}
	mi := &file_api_permit_v1_permit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuePermitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuePermitResponse) ProtoMessage() {}

func (x *IssuePermitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_permit_v1_permit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuePermitResponse.ProtoReflect.Descriptor instead.
func (*IssuePermitResponse) Descriptor() ([]byte, []int) {
	return file_api_permit_v1_permit_proto_rawDescGZIP(), []int{4}
}

func (x *IssuePermitResponse) GetPermit() *Permit {
	if x != nil {
		return x.Permit
	}
	return nil
}

var File_api_permit_v1_permit_proto protoreflect.FileDescriptor

const file_api_permit_v1_permit_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/permit/v1/permit.proto\x12\rapi.permit.v1\"m\n" +
	"\x06Permit\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vholder_name\x18\x02 \x01(\tR\n" +
	"holderName\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\"\n" +
	"\x10GetPermitRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"B\n" +
	"\x11GetPermitResponse\x12-\n" +
	"\x06permit\x18\x01 \x01(\v2\x15.api.permit.v1.PermitR\x06permit\"Q\n" +
	"\x12IssuePermitRequest\x12\x1f\n" +
	"\vholder_name\x18\x01 \x01(\tR\n" +
	"holderName\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\"D\n" +
	"\x13IssuePermitResponse\x12-\n" +
	"\x06permit\x18\x01 \x01(\v2\x15.api.permit.v1.PermitR\x06permit2\xb5\x01\n" +
	"\rPermitService\x12N\n" +
	"\tGetPermit\x12\x1f.api.permit.v1.GetPermitRequest\x1a .api.permit.v1.GetPermitResponse\x12T\n" +
	"\vIssuePermit\x12!.api.permit.v1.IssuePermitRequest\x1a\".api.permit.v1.IssuePermitResponseB3Z1example.com/project/gen/go/api/permit/v1;permitv1b\x06proto3"

var (
	file_api_permit_v1_permit_proto_rawDescOnce sync.Once
	file_api_permit_v1_permit_proto_rawDescData []byte
)

func file_api_permit_v1_permit_proto_rawDescGZIP() []byte {
	file_api_permit_v1_permit_proto_rawDescOnce.Do(func() {
		file_api_permit_v1_permit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_permit_v1_permit_proto_rawDesc), len(file_api_permit_v1_permit_proto_rawDesc)))
	})
	return file_api_permit_v1_permit_proto_rawDescData
}

var file_api_permit_v1_permit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_permit_v1_permit_proto_goTypes = []any{
	(*Permit)(nil),              // 0: api.permit.v1.Permit
	(*GetPermitRequest)(nil),    // 1: api.permit.v1.GetPermitRequest
	(*GetPermitResponse)(nil),   // 2: api.permit.v1.GetPermitResponse
	(*IssuePermitRequest)(nil),  // 3: api.permit.v1.IssuePermitRequest
	(*IssuePermitResponse)(nil), // 4: api.permit.v1.IssuePermitResponse
}
var file_api_permit_v1_permit_proto_depIdxs = []int32{
	0, // 0: api.permit.v1.GetPermitResponse.permit:type_name -> api.permit.v1.Permit
	0, // 1: api.permit.v1.IssuePermitResponse.permit:type_name -> api.permit.v1.Permit
	1, // 2: api.permit.v1.PermitService.GetPermit:input_type -> api.permit.v1.GetPermitRequest
	3, // 3: api.permit.v1.PermitService.IssuePermit:input_type -> api.permit.v1.IssuePermitRequest
	2, // 4: api.permit.v1.PermitService.GetPermit:output_type -> api.permit.v1.GetPermitResponse
	4, // 5: api.permit.v1.PermitService.IssuePermit:output_type -> api.permit.v1.IssuePermitResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_permit_v1_permit_proto_init() }
func file_api_permit_v1_permit_proto_init() {
	if File_api_permit_v1_permit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_permit_v1_permit_proto_rawDesc), len(file_api_permit_v1_permit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_permit_v1_permit_proto_goTypes,
		DependencyIndexes: file_api_permit_v1_permit_proto_depIdxs,
		MessageInfos:      file_api_permit_v1_permit_proto_msgTypes,
	}.Build()
	File_api_permit_v1_permit_proto = out.File
	file_api_permit_v1_permit_proto_goTypes = nil
	file_api_permit_v1_permit_proto_depIdxs = nil
}
